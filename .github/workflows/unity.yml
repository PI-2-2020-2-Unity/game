name: Unity

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: gableroux/unity3d:${{ matrix.version }}-${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2020.1.6f1
        target:
          - linux-il2cpp
          - windows
    steps:
      - name: Update git and xvfb
        run: |
          apt-get -y update
          apt-get -y install software-properties-common
          add-apt-repository ppa:git-core/ppa
          apt-get -y update
          apt-get -y upgrade
          apt-get -y install git xvfb curl

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.target }}
          restore-keys: |
            Library-

      - name: License
        run: echo "$UNITY_LICENSE" | tr -d '\r' > license.ulf

      - name: Activation
        run: xvfb-run --auto-servernum --server-args="-screen 0 640x480x24"
          /opt/Unity/Editor/Unity
          -batchmode
          -nographics
          -logFile /dev/stderr
          -quit
          -manualLicenseFile license.ulf
          || true

      - name: Build dir
        run: mkdir -p build

      - name: Use mono in windows
        run: sed -i "s/\(Standalone:\) 1/\1 0/" ProjectSettings/ProjectSettings.asset
        if: matrix.target == 'windows'

      - name: Build
        working-directory: build
        shell: bash
        run: source ../target_data.sh ${{ matrix.target }} &&
          xvfb-run --auto-servernum --server-args="-screen 0 640x480x24"
          /opt/Unity/Editor/Unity
          -batchmode
          -nographics
          -quit
          -buildTarget $build_target
          -projectPath "../"
          $build_option "$build_path"
          -logFile /dev/stderr

      - name: Remove debug things
        working-directory: build
        run: rm -rf
          *_BackUpThisFolder_ButDontShipItWithYourGame
          *.debug

      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.target }}
          path: build

  build2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - 2020.1.6f1
        target:
          - WebGL
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: Library-${{ matrix.target }}
          key: Library

      - name: Deactivate compression on WebGl
        run: |
          sed -i "s/\(webGLCompressionFormat:\) 1/\1 2/" ProjectSettings/ProjectSettings.asset
          git config --global user.name "someone"
          git config --global user.email "no@no.no"
          git commit --amend --no-edit

      - name: Build project
        uses: webbertakken/unity-builder@v1.2
        with:
          unityVersion: ${{ matrix.version }}
          targetPlatform: ${{ matrix.target }}

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.target }}
          path: build
